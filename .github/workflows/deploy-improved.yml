name: Deploy to ECS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY_WORKER: online-judge/worker
  ECR_REPOSITORY_BACKEND: online-judge/backend
  ECS_CLUSTER: online-judge-cluster-2
  ECS_SERVICE: online-judge-task-def-service-2nj3kt5c
  ECS_TASK_DEFINITION: online-judge-task-def

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push worker image to Amazon ECR
      id: build-worker-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and push it to ECR
        docker build -f Dockerfile.online-judge.worker -t $ECR_REGISTRY/$ECR_REPOSITORY_WORKER:$IMAGE_TAG .
        docker build -f Dockerfile.online-judge.worker -t $ECR_REGISTRY/$ECR_REPOSITORY_WORKER:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_WORKER:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_WORKER:latest
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY_WORKER:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Build, tag, and push backend image to Amazon ECR
      id: build-backend-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and push it to ECR
        docker build -f Dockerfile.online-judge.backend -t $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG .
        docker build -f Dockerfile.online-judge.backend -t $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:latest
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION --query taskDefinition > task-definition.json
        # Remove unsupported keys for GitHub Actions ECS deploy action
        jq 'del(.enableFaultInjection)' task-definition.json > task-definition-clean.json
        mv task-definition-clean.json task-definition.json
        cat task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition for worker
      id: task-def-worker
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: online-judge-worker-1
        image: ${{ steps.build-worker-image.outputs.image }}

    - name: Fill in the new image ID in the Amazon ECS task definition for worker-2
      id: task-def-worker-2
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ steps.task-def-worker.outputs.task-definition }}
        container-name: online-judge-worker-2
        image: ${{ steps.build-worker-image.outputs.image }}

    - name: Fill in the new image ID in the Amazon ECS task definition for backend
      id: task-def-backend
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ steps.task-def-worker-2.outputs.task-definition }}
        container-name: online-judge-backend
        image: ${{ steps.build-backend-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def-backend.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
